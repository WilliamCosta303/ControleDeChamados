/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.github.williamcosta303.visao;

import javax.swing.JOptionPane;
import com.github.williamcosta303.modelo.Chamado;
import com.github.williamcosta303.controle.ControleBanco;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.sql.SQLException;

/**
 *
 * @author william
 */
public class AbrirChamado extends javax.swing.JInternalFrame {
    private String usuario;

    /**
     * Creates new form AbrirChamado
     */
    public AbrirChamado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cTitulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cCategoria = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cLocalizacao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cNomeEstacao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cDescricao = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        bAbrirChamado = new javax.swing.JButton();
        bLimparCampos = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconifiable(true);
        setTitle("Abrir chamado");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Título");

        cTitulo.setToolTipText("Digite nome e ramal para contato");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Categoria");

        cCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "Instalação Software", "Manutenção Software", "Manutenção de computador", "Sistemas Internos (AGHWEB)", "Sistemas Terceiros", "Impressoras", "Outros" }));
        cCategoria.setToolTipText("Selecione a categoria de acordo com o problema");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Localização");

        cLocalizacao.setToolTipText("O setor, o número da sala, andar");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Nome Estação");

        cNomeEstacao.setToolTipText("Pode ser visto na etiqueta com o micro. --- INFORME O NOME COMPLETO");

        jLabel5.setText("Descrição:");

        cDescricao.setColumns(20);
        cDescricao.setRows(5);
        jScrollPane1.setViewportView(cDescricao);

        bAbrirChamado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/github/williamcosta303/imagens/novoCh-16.png"))); // NOI18N
        bAbrirChamado.setText("Abrir chamado");
        bAbrirChamado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbrirChamadoActionPerformed(evt);
            }
        });

        bLimparCampos.setText("Limpar campos");
        bLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimparCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bAbrirChamado)
                .addGap(104, 104, 104))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(bLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bAbrirChamado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bLimparCampos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cNomeEstacao)
                            .addComponent(cTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(cLocalizacao, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(cCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cNomeEstacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
//        JOptionPane.showMessageDialog(this, "Fechando");
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        int confirma = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja fechar sem abrir o chamado?", "Fechar janela", JOptionPane.YES_NO_OPTION);
        if(confirma == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void bAbrirChamadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbrirChamadoActionPerformed
        try{
            if(this.camposCorretos()){
                //JOptionPane.showMessageDialog(this, "Usuário logado: " + this.usuario + "\nTitulo: " + this.cTitulo.getText() + "\nCategoria: " + this.cCategoria.getSelectedItem().toString() + "\nLocalização: " + this.cLocalizacao.getText() + "\nNome estação: " + this.cNomeEstacao.getText() + "\nDescrição: " + this.cDescricao.getText());
                Chamado C = new Chamado();
                C.setTitulo(this.cTitulo.getText());
                C.setCategoria(this.cCategoria.getSelectedItem().toString());
                C.setLocalizacao(this.cLocalizacao.getText());
                C.setNomeEstacao(this.cNomeEstacao.getText());
                C.setDescricao(this.cDescricao.getText());
                C.setAbertoPor(this.usuario);
                C.setEquipe(3);
                C.setResponsavel(1);
                C.setEstado(0);
                
                ControleBanco CB = new ControleBanco();
                CB.cadastrarChamado(C);
                int numeroChamado = CB.receberNumeroChamado(C.getDescricao(), C.getNomeEstacao(), C.getTitulo());
                
                JOptionPane.showMessageDialog(this, "Chamado aberto com sucesso!\n"
                        + "\nNúmero do chamado aberto: " + numeroChamado
                        + "\nFavor aguardar atendimento!", "Abrir chamado", JOptionPane.INFORMATION_MESSAGE);
                
                CB.criarNovoRegistro("SISTEMA", this.recebeDataDoDia(), this.recebeHorario(), ">> Chamado aguardando atendimento <<", numeroChamado);
                int novoChamado = JOptionPane.showConfirmDialog(this, "Deseja abrir outro chamado?", "Abrir chamado", JOptionPane.YES_NO_OPTION);
                if(novoChamado == JOptionPane.YES_OPTION){
                    this.limparCampos();
                } else {
                    this.dispose();
                }
                
            }
        }catch(SQLException SE){
            JOptionPane.showMessageDialog(this, "Erro com banco de dados!\nCausa: " + SE.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bAbrirChamadoActionPerformed

    private void bLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimparCamposActionPerformed
        int confirma = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja limpar os campos?", "Limpar campos", JOptionPane.YES_NO_OPTION);
        if(confirma == JOptionPane.YES_OPTION){
            this.limparCampos();
        }
    }//GEN-LAST:event_bLimparCamposActionPerformed


    
    
    
    public void atualizarNomeLogado(String usuario) {
        this.usuario = usuario;
    }
    
    private void limparCampos(){
        this.cTitulo.setText("");
        this.cNomeEstacao.setText("");
        this.cLocalizacao.setText("");
        this.cDescricao.setText("");
        this.cCategoria.setSelectedIndex(0);
    }
    
    private boolean camposCorretos(){
        if(this.cTitulo.getText().length() > 0 && this.cTitulo.getText().length() < 75){
            if(this.cCategoria.getSelectedIndex() != 0){
                if(this.cNomeEstacao.getText().length() > 0 && this.cNomeEstacao.getText().length() < 50){
                    if(this.cLocalizacao.getText().length() > 0 && this.cLocalizacao.getText().length() < 50){
                        if(this.cDescricao.getText().length() > 0 && this.cDescricao.getText().length() < 140){
                            // CAMPOS CORRETOS
                            return true;
                        } else {
                            JOptionPane.showMessageDialog(this, "O campo 'Descrição' está preenchido incorretamente!\nLimites: Min: 1 | Max: 140", "ERRO", JOptionPane.ERROR_MESSAGE);
                            return false;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "O campo 'Localização' está preenchido incorretamente!\nLimites: Min: 1 | Max: 50", "ERRO", JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "O campo 'Nome estação' está preenchido incorretamente!\nLimites: Min: 1 | Max: 50", "ERRO", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(this, "O campo 'Categoria' está preenchido incorretamente!\nSelecione uma categoria", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "O campo 'Título' está preenchido incorretamente!\nLimites: Min: 1 | Max: 75", "ERRO", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private String recebeDataDoDia(){
        return new SimpleDateFormat("dd/MM/yyyy").format(new Date());
    }
    
    private String recebeHorario(){
        return new SimpleDateFormat("HH:mm").format(new Date());
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbrirChamado;
    private javax.swing.JButton bLimparCampos;
    private javax.swing.JComboBox cCategoria;
    private javax.swing.JTextArea cDescricao;
    private javax.swing.JTextField cLocalizacao;
    private javax.swing.JTextField cNomeEstacao;
    private javax.swing.JTextField cTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
